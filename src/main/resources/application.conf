load {
  publishQos: 0
  publishQos: ${?MQTT_LOAD_PUBLISH_QOS}

  subscribeQos: 0
  subscribeQos: ${?MQTT_LOAD_SUBSCRIBE_QOS}

  clientsMinNumber: 2
  clientsMinNumber: ${?MQTT_LOAD_FIXED_CLIENTS}
  clientsMinNumber: ${?MQTT_LOAD_MIN_CLIENTS}
  clientsMaxNumber: 20
  clientsMaxNumber: ${?MQTT_LOAD_FIXED_CLIENTS}
  clientsMaxNumber: ${?MQTT_LOAD_MAX_CLIENTS}
  #Maximal number of clients to spawn simultaneously
  clientsMaxSpawnAtOnce: 500
  clientsMaxSpawnAtOnce: ${?MQTT_LOAD_MAX_SPAWN_AT_ONCE}
  clientPrefix: "mqtt-load-simulator"
  clientPrefix: ${?MQTT_LOAD_CLIENT_PREFIX}
  randomizeClientPrefix: true
  randomizeClientPrefix: ${?MQTT_LOAD_RANDOMIZE_CLIENT_PREFIX}

  topicsNumber: 50
  topicsNumber: ${?MQTT_LOAD_TOPICS_NUMBER}
  topicPrefix: "mqtt-load-sim/"
  topicPrefix: ${?MQTT_LOAD_TOPIC_PREFIX}

  messageMinSize: 10
  messageMinSize: ${?MQTT_LOAD_MESSAGE_MIN_SIZE}
  messageMaxSize: 600
  messageMaxSize: ${?MQTT_LOAD_MESSAGE_MAX_SIZE}

  #After this interval simulation makes decision on number of clients - should it spawn some, should it shut down some or leave unchanged
  simulationStepInterval: 3000
  simulationStepInterval: ${?MQTT_LOAD_SIMULATION_STEP_INTERVAL}

  #Event probability is number associated with specific event here divided by sum of these numbers
  clientActionProbabilities {
    publish: 25
    publish: ${?MQTT_LOAD_CLIENT_PUBLISH_PROBABILITY}
    subscribe: 10
    subscribe: ${?MQTT_LOAD_CLIENT_SUBSCRIBE_PROBABILITY}
    unsubscribe: 5
    unsubscribe: ${?MQTT_LOAD_CLIENT_UNSUBSCRIBE_PROBABILITY}
    idle: 50
    idle: ${?MQTT_LOAD_CLIENT_IDLE_PROBABILITY}
  }

  #Interval between client actions (publish, subscribe, unsubscribe or idle iteration)
  clientStepInterval: 2000
  clientStepInterval: ${?MQTT_LOAD_CLIENT_STEP_INTERVAL}

  statsInterval: 1000
  statsInterval: ${?MQTT_LOAD_STATS_INTERVAL}

  #Time for reaching clientsMinNumber
  rampUpSeconds: 10
  rampUpSeconds: ${?MQTT_LOAD_RAMP_UP_SECONDS}

  #Should the actions (publish, subscribe, unsubscribe) be performed during ramp up or the clients should sit still until the ramp up is complete
  actionsDuringRampUp: true
  actionsDuringRampUp: ${?MQTT_LOAD_ACTIONS_DURING_RAMP_UP}

  persistentSession: false
  persistentSession: ${?MQTT_LOAD_PERSISTENT_SESSION}
}


mqtt {
  server: "localhost:1883"
  server: ${?MQTT_LOAD_SERVER}
  connectionTimeoutSeconds: 60
  connectionTimeoutSeconds: ${?MQTT_LOAD_CONNECTION_TIMEOUT_SECONDS}
  keepAliveSeconds: 180
  keepAliveSeconds: ${?MQTT_LOAD_KEEP_ALIVE_SECONDS}
}

monitoring {
  port = 1884
  port = ${?MQTT_LOAD_MONITORING_PORT}
  metricsEndpoint = "/metrics"
  metricsEndpoint = ${?MQTT_LOAD_MONITORING_METRICS_ENDPOINT}
  includeJavaMetrics = true
  includeJavaMetrics = ${?MQTT_LOAD_MONITORING_INCLUDE_JAVA_METRICS}
}

